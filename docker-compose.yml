version: '3.8'

services:
  valvechain-backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - PRIVATE_KEY=${PRIVATE_KEY}
      - RPC_URL=${RPC_URL}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - PO_CONTRACT_ADDRESS=${PO_CONTRACT_ADDRESS}
      - FEE_WALLET_ADDRESS=${FEE_WALLET_ADDRESS}
      - JWT_SECRET=${JWT_SECRET:-default-jwt-secret-for-dev}
      - DB_PATH=/app/data/users.db
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
    networks:
      - valvechain-network
    depends_on:
      - python-service

  python-service:
    build:
      context: .
      dockerfile: Dockerfile.python
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./uploads:/app/uploads
    networks:
      - valvechain-network

  # Optional: Database service for production
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=valvechain
      - POSTGRES_USER=${POSTGRES_USER:-valvechain}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - valvechain-network

networks:
  valvechain-network:
    driver: bridge

volumes:
  postgres_data:
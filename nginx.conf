events {
    worker_connections 1024;
}

http {
    upstream valvechain_api {
        server valvechain-api:3000;
    }

    upstream vendor_api {
        server vendor-api:8000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Proxy for ValveChain API
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://valvechain_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy for Vendor API
        location /vendor/ {
            limit_req zone=api_limit burst=20 nodelay;
            rewrite ^/vendor/(.*) /$1 break;
            proxy_pass http://vendor_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle file uploads
            client_max_body_size 50M;
        }

        # Serve uploaded files
        location /uploads/ {
            alias /var/www/uploads/;
            autoindex off;
            add_header Content-Disposition "attachment";
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}